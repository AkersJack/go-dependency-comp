name: Build docker images

on: push

jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.get-date.outputs.date }}
      version: ${{ steps.strip-v.outputs.version }}
    steps:
      - name: Get current date
        id: get-date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%T%z')"

      - name: Get and strip version tag
        id: strip-v
        run: |
          VERSION=${{ github.event.release.tag_name }}
          STRIPPED_VERSION=${VERSION#v}
          echo "::set-output name=version::$STRIPPED_VERSION"

  build:
    runs-on: ubuntu-latest
    needs: get-info
    strategy:
      matrix:
        platform: [linux/386, linux/amd64, linux/arm64, linux/arm/v6, linux/arm/v7]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
            VERSION=${{ needs.get-info.outputs.version }}
            COMMIT=${{ github.sha }}
            BRANCH=master
            DATE=${{ needs.get-info.outputs.date }}
          push: false # We will push all platforms in the final job
          tags: rqlite/rqlite:${{ needs.get-info.outputs.version }}-temp-${{ matrix.platform }}

  push-multi-platform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create \
            --tag rqlite/rqlite:dev \
            $(for platform in linux/386 linux/amd64 linux/arm64 linux/arm/v6 linux/arm/v7; do echo "rqlite/rqlite:${{ needs.get-info.outputs.version }}-temp-$platform "; done)
